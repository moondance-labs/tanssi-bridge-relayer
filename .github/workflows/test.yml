# This workflow will test relayer

name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
          submodules: recursive

    - name: Check jq
      run: jq --version

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
      with:
          version: stable

    - name: Show Forge version
      run: forge --version

    - name: Install abigen
      run: go install github.com/ethereum/go-ethereum/cmd/abigen@v1.14.11

    - name: Check abigen
      run: abigen --version

    - name: Install sszgen
      run: go install github.com/ferranbt/fastssz/sszgen@v0.1.4

    - name: Check sszgen
      run: sszgen --help

    - name: Install Mage
      run: go install github.com/magefile/mage@v1.15.0

    - name: Check mage
      run: mage --version

    - name: Run Forge fmt
      run: |
        forge fmt overridden_contracts/ --check
      id: fmt

    - name: Build
      run: mage build

    - name: Check if go contract bindings are up-to-date
      run: git diff --exit-code ./relays/contracts || (echo "The contract bindings are not up-to-date against contracts." && exit 1)

    - name: Test Relayer
      run: mage test

    - name: Run Forge tests
      run: |
        cd snowbridge/contracts
        forge test -vvv
      id: test
  set-tags:
    runs-on: ubuntu-latest
    outputs:
      git_ref: ${{ steps.check-git-ref.outputs.git_ref }}
    steps:
      - name: Check git ref
        id: check-git-ref
        run: |
          if [[ -n "${{ github.event.pull_request.head.sha }}" ]]; then
            echo "git_branch=$(echo ${GITHUB_HEAD_REF})" >> $GITHUB_OUTPUT
            echo "git_ref=${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT
          elif [[ -n "${{ github.event.inputs.pull_request }}" ]]; then
            echo "git_branch=$(echo ${GITHUB_HEAD_REF})" >> $GITHUB_OUTPUT
            echo "git_ref=refs/pull/${{ github.event.inputs.pull_request }}/head" >> $GITHUB_OUTPUT
          else
            echo "git_branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
            echo "git_ref=$GITHUB_REF" >> $GITHUB_OUTPUT
          fi
  check-copyright:
    runs-on: ubuntu-latest
    needs: [ "set-tags" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.set-tags.outputs.git_ref }}
      - name: Find un-copyrighted files
        run: |
          find . -name '*.sol' -exec grep -H -E -o -c Copyright {} \; | grep ':0' || true
          FILECOUNT=$(find . -name '*.sol' -exec grep -H -E -o -c Copyright {} \; | grep -c ':0' || true)
          if [[ $FILECOUNT -eq 0 ]]; then
              true
          else
              false
          fi